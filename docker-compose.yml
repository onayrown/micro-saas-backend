services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7170:8080"
      - "7171:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT=Debug
      - ASPNETCORE_LOGGING__LOGLEVEL__MICROSOFT=Debug
      - ASPNETCORE_LOGGING__LOGLEVEL__MICROSOFT.HOSTING.LIFETIME=Debug
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=microsaas
      - MongoDB__ServerSelectionTimeout=30000
      - MongoDB__ConnectTimeout=30000
      - REDIS_CONNECTION_STRING=redis:6379
      - REDIS_INSTANCE_NAME=MicroSaaS
      - ConnectionStrings__Redis=redis:6379,abortConnect=false
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ./.env:/app/.env:ro
    depends_on:
      - mongodb
      - redis
    networks:
      - micro-saas-network

  # Banco de dados MongoDB
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - micro-saas-network

  # Servidor Redis para cache e rate limiting
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - micro-saas-network

  # Interface de administração do MongoDB (opcional)
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=senha123
    depends_on:
      - mongodb
    networks:
      - micro-saas-network

  # Interface de administração do Redis (opcional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - micro-saas-network

networks:
  micro-saas-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 